package test;
// Generated by CodiumAI

import io.EcritureMedicamentsCsv;

import org.junit.Test;
import pharmacie.Medicament;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import static org.junit.Assert.*;

public class EcriremodificationdemedicamentcsvTest {


    // Given a valid Medicament object and a valid CSV file path, the method should successfully modify the corresponding line in the CSV file with the updated values of the Medicament object.
    @Test
    public void test_modifyMedicament_validInput() throws IOException {
        // Arrange
        List<Medicament> medicaments = new ArrayList<>();
        Medicament medicament = new Medicament("Med1", 10.0, "TYPE1", true, 20);
        medicaments.add(medicament);
        String fichierCsv = "test.csv";
    
        // Create a test CSV file with initial values
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(fichierCsv))) {
            writer.write("Med1,5.0,TYPE2,false,10\n");
            writer.write("Med2,7.0,TYPE3,true,15\n");
        }
    
        // Act
        EcritureMedicamentsCsv.ecrireModificationDeMedicamentCsv(medicament, fichierCsv);
    
        // Assert
        List<String> expectedLines = Arrays.asList("Med1,10.0,TYPE1,true,20", "Med2,7.0,TYPE3,true,15");
        List<String> actualLines = Files.readAllLines(Paths.get(fichierCsv));
        assertEquals(expectedLines, actualLines);
    }

    // Given a CSV file with no lines and a valid Medicament object, the method should not modify any line in the CSV file and should not throw any exception.
    @Test
    public void test_modifyMedicament_emptyCsv() throws IOException {
        // Arrange
        List<Medicament> medicaments = new ArrayList<>();
        Medicament medicament = new Medicament("Med1", 10.0, "TYPE1", true, 20);
        medicaments.add(medicament);
        String fichierCsv = "test.csv";
    
        // Create an empty test CSV file
        Files.createFile(Paths.get(fichierCsv));
    
        // Act
        EcritureMedicamentsCsv.ecrireModificationDeMedicamentCsv(medicament, fichierCsv);
    
        // Assert
        List<String> expectedLines = Collections.emptyList();
        List<String> actualLines = Files.readAllLines(Paths.get(fichierCsv));
        assertEquals(expectedLines, actualLines);
    }

}